"use strict";

console.log(4/0);

const obj = {
    name: "John",
    age: 25,
    isMarried: true
};

const arrObj = {
    a: 'a',
    1: 'b',
    2: 'c',
    abc: {
        
    }
};
const b = 'b';
arrObj[b] = '1234';

console.log(arrObj["b"])

console.log(obj["isMarried"])

let arr = [4, true, "isMar", false];

console.log(arr);
console.log(arr[3]);



//alert("Hello!");

//const result = confirm("Are you here?");
//console.log(result);

// const answer = +prompt("Вам есть 18?", "18");
// console.log(typeof(answer));

// const answers = [];

// answers[0] = prompt("Как ваше имя?", "");
// answers[1] = prompt("Как ваша фамилия?", "");
// answers[2] = +prompt("Сколько вам лет?", "");

// console.log(typeof(answers));

const category = "toys";

console.log(`https://someurl.com/${category}/4`);

const user = "Ivan";

alert(`Hello, ${user}`);

let incr = 10, 
    decr = 10;

    // ++incr;
    // --decr;


    console.log(incr++);
    console.log(decr--);

    console.log(++incr);
    console.log(--decr);

    
function getMathResult(base, repeat) {
    if (typeof(repeat) == "number") {
        let s = String(base);
        for (let i = 1; i < repeat; i++) {
            s = s + "---";
            s = s + base * (i + 1);
        }
        return s;
    } else {
        return base;
    }
    
}

console.log(getMathResult(1, 17));

function sayHello(personName) {
    return ("Привет " + personName);
}

console.log(sayHello("alex"))



function showFirstMessage(text) {
    console.log(text);
}

showFirstMessage("Hello world");

function calc(a, b) {
    return (a + b);
}

function ret() {
    let r = 5;

    return r;
}

let b = ret();

console.log(b);

const logger = function () {
    console.log("Hello world!");
};

logger();


const calc = (a, b) => a + b;
// const calc = (a, b) => {return a + b};

console.log(typeof(5))

function copy(mainObj) {
    let objCopy = {};

    let key;
    for (key in mainObj) {
        objCopy[key] = mainObj[key];
    }
    return objCopy;
}

const nums = {
    a: 5,
    b: 7,
    c: {
        x: 12,
        y: 37 
    }      
};

const newObj = copy(nums);

newObj.b = 387;
//newObj.c.x = 147;

console.log(nums);
console.log(newObj);

const add = {
    d: 45,
    e: 82,
    f: {
        i:34,
        h:32
    }
};

//console.log(Object.assign(nums, add));

const clone = Object.assign({}, add);
clone.d = 22;
clone.f.h = 0;

console.log(clone);
console.log(add);


const oldArray = [];

const video = ['youtube','vimeo','rutube'];
const blogs = ['wordpress', 'lifejournal','blogger'];
const internet = [...video, ...blogs, 'vk', 'facebook'];

console.log(internet);

function log(a, b, c) {
    console.log(a);
    console.log(b);
    console.log(c);
}

const nums2 = [2, 5, 7];
 log(...nums2);


 const array = ["a", "bvc", "fess"];
 const newArray = [...array];

 console.log(newArray);


 const q = {
    l: 543,
    two: 43,
    three: {
        d: 4,
        r: 32
    }
 };

 const newObjct = {
    ...q
 }

 console.log(newObjct);

 newObjct.two = 2;
 newObjct.three.d = 54;

 console.log(newObjct);
 console.log(q);



 const personalPlanPeter = {
    name: "Peter",
    age: "29",
    skills: {
        languages: ['ru', 'eng'],
        programmingLangs: {
            js: '20%',
            php: '10%'
        },
        exp: '1 month'
    },
    showAgeAndLangs(plan) {
        res = `Мне ${plan.age} и я владею языками:`;
        let langs = plan.skills.languages;
        for (let i in langs) {
            res = res + " " + langs[i].toUpperCase();
            }
        return res;
    }
};


function showProgrammingLangs(plan) {
    let res = "";
    let langs = {};
    langs = plan.skills.programmingLangs;
    for (let key in langs) {
        res = res + `Язык ${key} изучен на ${langs[key]} `;
    }
    return res;
}

console.log(showProgrammingLangs(personalPlanPeter));


function showExperience(plan) {
    let exp = {};
    exp = plan.skills;
    return exp.exp;
}


function showProgrammingLangs(plan) {
    let res = "";
    for (let key in plan.skills.programmingLangs) {
        res = res + `Язык ${key} изучен на ${plan.skills.programmingLangs[key]} `;
    }
}


const someString = 'This is some strange string';

function reverse(str) {
    if (typeof(str) == "string") {
    let arr = str.split("");
    const newArr = [];
    let j = 0;
    for (let i = arr.length - 1; i > 0; i--) {
        newArr[j++] = arr[i];
    }
    return newArr.join("");
    } else {
        return "Ошибка!";
    }
}

console.log(reverse(someString));

const baseCurrencies = ['USD', 'EUR'];
const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

function availableCurr(arr, missingCurr) {
    if (arr.length == 0) {
        return "Нет доступных валют";
    } else {
        let newArr = [];
        if (typeof(missingCurr) == "string") {
            misArr = missingCurr.split("\0");
            newArr = arr.filter(x => !missingCurr.includes(x));
        } else {
            newArr = [...arr];
        }
        let res = "Доступные валюты:\n";
        for (let i in newArr) {
            res = res + `${newArr[i]}\n`
        }
        return res
    }
}

console.log(availableCurr(['UAH', 'RUB', 'CNY'], 'CNY'));


// let str = "some";
// let strObj = new String(str);

// console.log(typeof(strObj))
// console.log(typeof(str))

// console.dir([1,2,3])


// const soldier = {
//     health: 400,
//     armor: 100,
//     sayHello: function() {
//         console.log("Hello");
//     }
// };

// const john = Object.create(soldier);

// const john = {
//     health:100,

// };

// //john.__proto__ = soldier; //уст

// Object.setPrototypeOf(john, soldier);

// console.log(john.armor);
//  john.sayHello();


// console.log(document.head);
// console.log(document.documentElement);
// console.log(document.documentURI);

// console.log(document.body.childNodes);
// console.log(document.body.firstElementChild);
// console.log(document.body.lastChild);

// console.log(document.getElementById("current"));
// console.log(document.querySelector("#current").parentNode.parentNode);

// console.log(document.querySelector('[data-current = "3"]').nextElementSibling);

for (let node of document.body.childNodes) {
    if (node.nodeName == "#text")
    {
        continue;
    }
    console.log(node);
}

function pow (base, state) {
    if (state === 0)
        return 1;
    else 
        return pow(base, state - 1) * base;
}

console.log(pow(2, 4));
console.log(pow(13, 3));

console.log(pow(5,0));


let students = { 
    js: [{
        name: "John",
        progress: 100
    },
    {
        name: "Ivan",
        progress: 60
    }],

    html: {
        basic: [{
            name: "Peter",
            progress: 20
        },
        {
            name: "Ann",
            progress: 18
        }],
    pro: [
        {
            name: "Sam",
            progress: 10
        }
    ],
    semi: {
        students: [
            {
                name: "Test",
                progress: 100
            }
        ]
    }
    }
};

// function getTotalProgressByIteration (data) {
//     let total = 0;
//     let students = 0;

//     for (let course of Object.values(data)) {
//         if (Array.isArray(course)) {
//             students += course.length;

//             for (let i = 0; i < course.length; i++) {
//                 total += course[i].progress;
//             }
//         }
//         else {
//             for (let subCourse of Object.values(course)) {
//                 students += subCourse.length;

//                 for (let i = 0; i< subCourse.length; i++) {
//                     total += subCourse[i].progress;
//                 }
//             }            
//         }
//     }
//     return total / students;
// }

function getTotalProgressByRecursion(data) {
    
    if (Array.isArray(data)) {
        let total = 0;

        for (let i = 0; i < data.length; i++) {
            total += data[i].progress;
        }

        return [total, data.length];
    } else {
        let total = [0,0];

        for (let subData of Object.values(data)) {
            const subDataArr = getTotalProgressByRecursion(subData);

            total[0] += subDataArr[0];
            total[1] += subDataArr[1]; 
        }
        return total;
    }
}


// console.log(getTotalProgressByIteration(students));

const res = getTotalProgressByRecursion(students);
console.log(res[0]/res[1]);
